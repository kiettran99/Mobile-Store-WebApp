{"version":3,"sources":["webpack:///./src/actions/product.js","webpack:///./src/components/products/ProductItem.js","webpack:///./src/components/products/ProductList.js"],"names":["getProducts","async","res","axios","get","urlAPI","dispatch","type","GET_PRODUCTS","payload","data","e","console","log","PRODUCT_ERROR","getProduct","id","GET_PRODUCT","addProduct","formData","history","config","headers","post","ADD_PRODUCT","setAlert","push","ProductItem","product","_id","name","imageUrl","price","description","manufacturer","category","conditionProduct","quantity","className","src","width","height","to","propTypes","PropTypes","object","isRequired","ProductList","products","loading","useEffect","href","Spinnet","map","key","func","connect","state"],"mappings":"yFAAA,kJAOO,MAAMA,EAAc,IAAMC,UAC7B,IACI,MAAMC,QAAYC,IAAMC,IAAOC,IAAF,iBAE7BC,EAAS,CACLC,KAAMC,IACNC,QAASP,EAAIQ,OAGrB,MAAOC,GACHC,QAAQC,IAAIF,GACZL,EAAS,CACLC,KAAMO,IACNL,QAASP,IAAIQ,SAKZK,EAAcC,GAAOf,UAC9B,IACI,MAAMC,QAAYC,IAAMC,IAAK,GAAEC,oBAAuBW,KAEtDV,EAAS,CACLC,KAAMU,IACNR,QAASP,EAAIQ,OAGrB,MAAOC,GACHL,EAAS,CACLC,KAAMO,IACNL,QAASP,IAAIQ,SAKZQ,EAAa,CAACC,EAAUC,IAAYnB,UAC7C,IACIW,QAAQC,IAAI,4BACZ,MAAMQ,EAAS,CACXC,QAAS,CACL,eAAgB,wBAIlBpB,QAAYC,IAAMoB,KAAQlB,IAAF,gBAAyBc,EAAUE,GACjET,QAAQC,IAAIX,GACZI,EAAS,CACLC,KAAMiB,IACNf,QAASP,EAAIQ,OAGjBJ,EAASmB,YAAS,2BAA4B,YAE9CL,EAAQM,KAAK,KAEjB,MAAOf,GACHC,QAAQC,IAAIF,GACZL,EAAS,CACLC,KAAMO,IACNL,QAASP,IAAIQ,U,2GC9DzB,MAAMiB,EAAc,EAAGC,SAAWC,MAAKC,OAAMC,WAAUC,QAAOC,cAAaC,eAAcC,WACrFC,mBAAkBC,eACd,yBAAKC,UAAU,YACX,4BAAQA,UAAU,qBACd,yBAAKA,UAAU,YACX,yBAAKC,IAAKR,EAAUS,MAAO,IAAKC,OAAQ,OAE5C,gCAAYH,UAAU,aAClB,wBAAIA,UAAU,SAASR,GACvB,uBAAGQ,UAAU,QAAQL,GACrB,yBAAKK,UAAU,eACX,yBAAKA,UAAU,gBAAf,eACA,yBAAKA,UAAU,gBAAf,iBAGR,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMI,GAAK,aAAYb,EAAOS,UAAU,sCAAxC,UACA,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,aAAhB,IAA8BN,GADlC,IACgD,yBAAKM,UAAU,aAAf,aAOpEX,EAAYgB,UAAY,CACpBf,QAASgB,IAAUC,OAAOC,YAIfnB,QC3Bf,MAAMoB,EAAc,EAAGC,UAAYA,WAAUC,WAAWjD,kBAEpDkD,oBAAU,KACNlD,KACD,CAACA,IAGA,yBAAKsC,UAAU,aACX,6BACA,uBAAGA,UAAU,eAAb,iCACI,uBAAGa,KAAK,mCAAR,4BAGJ,6BAEA,yBAAKb,UAAU,OACVW,EAAU,kBAACG,EAAA,EAAD,MAAaJ,EAASK,IAAIzB,GACjC,kBAAC,EAAD,CAAa0B,IAAK1B,EAAQC,IAAKD,QAASA,QAS5DmB,EAAYJ,UAAY,CACpB3C,YAAa4C,IAAUW,KAAKT,WAC5BE,SAAUJ,IAAUC,OAAOC,YAOhBU,sBAJUC,KACrBT,SAAUS,EAAM7B,UAGoB,CAAE5B,iBAA3BwD,CAA0CT","file":"2.bundle.js","sourcesContent":["import {\r\n    GET_PRODUCT, GET_PRODUCTS, ADD_PRODUCT, PRODUCT_ERROR\r\n} from './types';\r\nimport urlAPI from '../utils/urlAPI';\r\nimport axios from 'axios';\r\nimport { setAlert } from '../actions/alert';\r\n\r\nexport const getProducts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`${urlAPI}/api/products`);\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: res.data\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n            payload: res.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProduct = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`${urlAPI}/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_PRODUCT,\r\n            payload: res.data\r\n        });\r\n    }\r\n    catch (e) {\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n            payload: res.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const addProduct = (formData, history) => async dispatch => {\r\n    try {\r\n        console.log('Request create a product');\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        const res = await axios.post(`${urlAPI}/api/products`, formData, config);\r\n        console.log(res);\r\n        dispatch({\r\n            type: ADD_PRODUCT,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Add product successfully', 'success'));\r\n\r\n        history.push('/');\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n            payload: res.data\r\n        });\r\n    }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProductItem = ({ product: { _id, name, imageUrl, price, description, manufacturer, category,\r\n    conditionProduct, quantity } }) => (\r\n        <div className=\"col-md-4\">\r\n            <figure className=\"card card-product\">\r\n                <div className=\"img-wrap\">\r\n                    <img src={imageUrl} width={348} height={220} />\r\n                </div>\r\n                <figcaption className=\"info-wrap\">\r\n                    <h4 className=\"title\">{name}</h4>\r\n                    <p className=\"desc\">{description}</p>\r\n                    <div className=\"rating-wrap\">\r\n                        <div className=\"label-rating\">132 reviews</div>\r\n                        <div className=\"label-rating\">154 orders </div>\r\n                    </div>\r\n                </figcaption>\r\n                <div className=\"bottom-wrap\">\r\n                    <Link to={`/products/${_id}`} className=\"btn btn-sm btn-primary float-right\">Detail</Link>\r\n                    <div className=\"price-wrap h5\">\r\n                        <span className=\"price-new\">${price}</span> <del className=\"price-old\">$1980</del>\r\n                    </div>\r\n                </div>\r\n            </figure>\r\n        </div>\r\n    );\r\n\r\nProductItem.propTypes = {\r\n    product: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport default ProductItem;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts } from '../../actions/product';\r\nimport Spinnet from '../layout/Spinnet';\r\nimport ProductItem from './ProductItem';\r\n\r\nconst ProductList = ({ products: { products, loading }, getProducts }) => {\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, [getProducts]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <p className=\"text-center\">More bootstrap 4 components on \r\n                <a href=\"http://bootstrap-ecommerce.com/\">\r\n                    Bootstrap-ecommerce.com</a>\r\n            </p>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                {loading ? <Spinnet />: products.map(product => (\r\n                    <ProductItem key={product._id} product={product} />\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nProductList.propTypes = {\r\n    getProducts: PropTypes.func.isRequired,\r\n    products: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    products: state.product\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProducts })(ProductList);\r\n\r\n"],"sourceRoot":""}