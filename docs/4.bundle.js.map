{"version":3,"sources":["webpack:///./src/components/auth/Login.js"],"names":["Login","isAuthenticated","login","formData","setFormData","useState","username","password","to","onChange","e","target","name","value","className","style","width","margin","minWidth","onSubmit","async","preventDefault","type","placeholder","required","propTypes","PropTypes","func","isRequired","connect","state","auth"],"mappings":"01BAOA,MAAMA,EAAQ,EAAGC,kBAAiBC,YAE9B,MAAOC,EAAUC,GAAeC,mBAAS,CACrCC,SAAU,GACVC,SAAU,MAGR,SAAED,EAAF,SAAYC,GAAaJ,EAQ/B,GAAIF,EACA,OAAO,kBAAC,IAAD,CAAUO,GAAG,MAGxB,MAKMC,EAAWC,GAAKN,EAAY,EAAD,KAAMD,GAAN,IAAgB,CAACO,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,SAE3E,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACXC,MApBM,CACdC,MAAO,OACPC,OAAQ,YACRC,SAAU,UAkBF,yBAAKJ,UAAU,eAAf,kBAIA,yBAAKA,UAAU,aACX,0BAAMK,SAAUT,GAhBfU,WACbV,EAAEW,iBACFnB,EAAMI,EAAUC,IAFHa,CAgB6BV,IAC1B,yBAAKI,UAAU,cACX,2BAAOQ,KAAK,OACRR,UAAU,eACVS,YAAY,YACZX,KAAK,WACLC,MAAOP,EACPG,SAAUC,GAAKD,EAASC,GACxBc,eAGR,yBAAKV,UAAU,cACX,2BAAOQ,KAAK,WACRR,UAAU,eACVS,YAAY,WACZX,KAAK,WACLC,MAAON,EACPE,SAAUC,GAAKD,EAASC,GACxBc,eAGR,4BAAQF,KAAK,SAASR,UAAU,oCAAhC,SAIA,uBAAGA,UAAU,QAAb,0BAC2B,kBAAC,IAAD,CAAMN,GAAG,aAAT,iBASnDR,EAAMyB,UAAY,CACdvB,MAAOwB,IAAUC,KAAKC,YAOXC,sBAJUC,KACrB7B,gBAAiB6B,EAAMC,KAAK9B,kBAGQ,CAAEC,WAA3B2B,CAAoC7B","file":"4.bundle.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = ({ isAuthenticated, login }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const { username, password } = formData;\r\n\r\n    const cardStyle = {\r\n        width: \"30vw\",\r\n        margin: \"1rem auto\",\r\n        minWidth: \"24rem\"\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        login(username, password);\r\n    }\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\"\r\n                style={cardStyle}>\r\n                <div className=\"card-header\">\r\n                    Please sign in\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={e => onSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"User Name\"\r\n                                name='username'\r\n                                value={username}\r\n                                onChange={e => onChange(e)}\r\n                                required={true} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={e => onChange(e)}\r\n                                required={true} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-success btn-md btn-block\">\r\n                            Login\r\n                        </button>\r\n\r\n                        <p className=\"my-1\">\r\n                            Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}