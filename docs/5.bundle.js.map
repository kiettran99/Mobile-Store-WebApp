{"version":3,"sources":["webpack:///./src/components/auth/Register.js"],"names":["Register","isAuthenticated","register","setAlert","formData","setFormData","useState","username","password","password2","name","to","onChange","e","target","value","className","style","width","margin","minWidth","onSubmit","async","preventDefault","pasword2","type","placeholder","required","propTypes","PropTypes","func","isRequired","connect","state","auth"],"mappings":"k2BASA,MAAMA,EAAW,EAAGC,kBAAiBC,WAAUC,eAE3C,MAAOC,EAAUC,GAAeC,mBAAS,CACrCC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,KAAM,MAGJ,SAAEH,EAAF,SAAYC,EAAZ,UAAsBC,EAAtB,KAAiCC,GAASN,EAQhD,GAAIH,EACA,OAAO,kBAAC,IAAD,CAAUU,GAAG,MAGxB,MAYMC,EAAWC,GAAKR,EAAY,EAAD,KAAMD,GAAN,IAAgB,CAACS,EAAEC,OAAOJ,MAAOG,EAAEC,OAAOC,SAE3E,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACXC,MA3BM,CACdC,MAAO,OACPC,OAAQ,YACRC,SAAU,UAyBF,yBAAKJ,UAAU,eAAf,iBAIA,yBAAKA,UAAU,aACX,0BAAMK,SAAUR,GAvBfS,WACbT,EAAEU,iBAEEf,IAAagB,SACbtB,EAAS,CAAEK,WAAUC,WAAUE,SAG/BP,EAAS,wBAAyB,YAPzBmB,CAuB6BT,IAE1B,yBAAKG,UAAU,cACX,2BAAOS,KAAK,OACRT,UAAU,eACVU,YAAY,OACZhB,KAAK,OACLK,MAAOL,EACPE,SAAUC,GAAKD,EAASC,GACxBc,eAGR,yBAAKX,UAAU,cACX,2BAAOS,KAAK,OACRT,UAAU,eACVU,YAAY,WACZhB,KAAK,WACLK,MAAOR,EACPK,SAAUC,GAAKD,EAASC,GACxBc,eAGR,yBAAKX,UAAU,cACX,2BAAOS,KAAK,OACRT,UAAU,eACVU,YAAY,WACZhB,KAAK,WACLK,MAAOP,EACPI,SAAUC,GAAKD,EAASC,GACxBc,eAGR,yBAAKX,UAAU,cACX,2BAAOS,KAAK,WACRT,UAAU,eACVU,YAAY,YACZhB,KAAK,YACLK,MAAON,EACPG,SAAUC,GAAKD,EAASC,GACxBc,eAGR,4BAAQF,KAAK,SAAST,UAAU,oCAAhC,SAIA,uBAAGA,UAAU,QAAb,4BAC6B,kBAAC,IAAD,CAAML,GAAG,UAAT,kBASrDX,EAAS4B,UAAY,CACjB1B,SAAU2B,IAAUC,KAAKC,WACzB5B,SAAU0B,IAAUC,KAAKC,YAOdC,sBAJUC,KACrBhC,gBAAiBgC,EAAMC,KAAKjC,kBAGQ,CAAEC,aAAUC,cAArC6B,CAAiDhC","file":"5.bundle.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { register } from '../../actions/auth';\r\nimport { setAlert } from '../../actions/alert';\r\n\r\nconst Register = ({ isAuthenticated, register, setAlert }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n        password2: '',\r\n        name: ''\r\n    })\r\n\r\n    const { username, password, password2, name } = formData;\r\n\r\n    const cardStyle = {\r\n        width: \"30vw\",\r\n        margin: \"1rem auto\",\r\n        minWidth: \"24rem\"\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password === pasword2) {\r\n            register({ username, password, name });\r\n        }\r\n        else {\r\n            setAlert('Password is not match', 'dangger');\r\n        }\r\n\r\n    }\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\"\r\n                style={cardStyle}>\r\n                <div className=\"card-header\">\r\n                    Register user\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={e => onSubmit(e)}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={e => onChange(e)}\r\n                                required={true} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Username\"\r\n                                name='username'\r\n                                value={username}\r\n                                onChange={e => onChange(e)}\r\n                                required={true} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={e => onChange(e)}\r\n                                required={true} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password2\"\r\n                                name='password2'\r\n                                value={password2}\r\n                                onChange={e => onChange(e)}\r\n                                required={true} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-success btn-md btn-block\">\r\n                            Login\r\n                    </button>\r\n\r\n                        <p className=\"my-1\">\r\n                            Already have an account? <Link to=\"/login\">Login in</Link>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    register: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, setAlert })(Register);"],"sourceRoot":""}